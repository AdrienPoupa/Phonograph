diff --git a/README.md b/README.md
index b7fc3cc0..91afc09b 100644
--- a/README.md
+++ b/README.md
@@ -1,5 +1,6 @@
 # Phonograph
 [![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://github.com/kabouzeid/Phonograph/blob/master/LICENSE.txt)
+[![CircleCI](https://circleci.com/gh/soncaokim/Phonograph.svg?style=svg)](https://circleci.com/gh/soncaokim/Phonograph)
 
 **A material designed local music player for Android.**
 
diff --git a/app/build.gradle b/app/build.gradle
index 9d04c9c6..89aa01b9 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -3,21 +3,35 @@ import javax.annotation.Nullable
 apply plugin: 'com.android.application'
 
 static def gitBranch() {
-    def branch = 'GitHub'
+    def branch = ''
     try {
-        def gitcheck = 'command -v git >/dev/null 2>&1'.execute()
-        gitcheck.waitFor()
-        if (gitcheck.exitValue() == 0) {
-            def proc = 'git rev-parse --abbrev-ref HEAD'.execute()
-            proc.in.eachLine { line -> branch = line }
-            proc.err.eachLine { line -> println line }
-            proc.waitFor()
+        def proc = 'git rev-parse --abbrev-ref HEAD'.execute()
+        proc.in.eachLine { line -> branch = line }
+        proc.err.eachLine { line -> println line }
+        proc.waitFor()
+        if (proc.exitValue() != 0) {
+            branch = ''
         }
     } catch (Exception e) {
         // Do nothing
         println e
     }
-    branch
+
+    def sha1 = ''
+    try {
+        def proc = 'git rev-parse --short HEAD'.execute()
+        proc.in.eachLine { line -> sha1 = line }
+        proc.err.eachLine { line -> println line }
+        proc.waitFor()
+        if (proc.exitValue() != 0) {
+            sha1 = ''
+        }
+    } catch (Exception e) {
+        // Do nothing
+        println e
+    }
+    
+    return (branch + '-' + sha1)
 }
 
 def getProperties(String fileName) {
@@ -49,11 +63,10 @@ android {
     }
     buildTypes {
@@ -62,11 +75,23 @@ android {
             shrinkResources true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
             signingConfig signingConfigs.release
+            applicationVariants.all { variant ->
+                variant.outputs.all {
+                    def date = new Date().format('yyyyMMdd-HHmm')
+                    outputFileName = "phono_" + date + "_" + gitBranch() + "_release" + ".apk"
+                }
+            }
         }
    }
     packagingOptions {
         exclude 'META-INF/LICENSE'
